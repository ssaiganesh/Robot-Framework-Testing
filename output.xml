<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.11.0 on win32)" generated="20221117 03:46:17.744" rpa="false" schemaversion="3">
<suite id="s1" name="Simple Books Api" source="C:\Users\P0107074\PycharmProjects\robotFrameWorkPracticeBeginner\TestCases\simple_books_api.robot">
<test id="s1-t1" name="Status 200 and should be OK" line="14">
<kw name="Create Session" library="RequestsLibrary">
<arg>checkstatus</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221117 03:46:18.567" level="INFO">Creating Session using : alias=checkstatus, url=https://simple-books-api.glitch.me, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221117 03:46:18.566" endtime="20221117 03:46:18.567"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>checkstatus</arg>
<arg>/status</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20221117 03:46:19.710" level="INFO">GET Request : url=https://simple-books-api.glitch.me/status 
 path_url=/status 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221117 03:46:19.710" level="INFO">GET Response : url=https://simple-books-api.glitch.me/status 
 status=200, reason=OK 
 headers={'Date': 'Wed, 16 Nov 2022 19:46:19 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '15', 'Connection': 'keep-alive', 'x-powered-by': 'Express', 'etag': 'W/"f-v/Y1JusChTxrQUzPtNAKycooOTA"'} 
 body={"status":"OK"} 
 </msg>
<msg timestamp="20221117 03:46:19.710" level="INFO">C:\Users\P0107074\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'simple-books-api.glitch.me'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20221117 03:46:19.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221117 03:46:18.569" endtime="20221117 03:46:19.711"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20221117 03:46:19.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221117 03:46:19.711" endtime="20221117 03:46:19.713"/>
</kw>
<status status="PASS" starttime="20221117 03:46:18.566" endtime="20221117 03:46:19.713"/>
</test>
<test id="s1-t2" name="Register" line="19">
<kw name="Create Session" library="RequestsLibrary">
<arg>register</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221117 03:46:19.716" level="INFO">Creating Session using : alias=register, url=https://simple-books-api.glitch.me, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221117 03:46:19.716" endtime="20221117 03:46:19.717"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>clientName=sdfkjlffudkfffsdfsd</arg>
<arg>clientEmail=sdfklfffjhdkfsdffsdv@email.com.sg</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221117 03:46:19.717" level="INFO">${body} = {'clientName': 'sdfkjlffudkfffsdfsd', 'clientEmail': 'sdfklfffjhdkfsdffsdv@email.com.sg'}</msg>
<status status="PASS" starttime="20221117 03:46:19.717" endtime="20221117 03:46:19.717"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221117 03:46:19.719" level="INFO">${body} = {"clientName": "sdfkjlffudkfffsdfsd", "clientEmail": "sdfklfffjhdkfsdffsdv@email.com.sg"}</msg>
<status status="PASS" starttime="20221117 03:46:19.718" endtime="20221117 03:46:19.719"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221117 03:46:19.719" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20221117 03:46:19.719" endtime="20221117 03:46:19.719"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>register</arg>
<arg>/api-clients</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20221117 03:46:21.051" level="INFO">POST Request : url=https://simple-books-api.glitch.me/api-clients 
 path_url=/api-clients 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '89'} 
 body={"clientName": "sdfkjlffudkfffsdfsd", "clientEmail": "sdfklfffjhdkfsdffsdv@email.com.sg"} 
 </msg>
<msg timestamp="20221117 03:46:21.052" level="INFO">POST Response : url=https://simple-books-api.glitch.me/api-clients 
 status=201, reason=Created 
 headers={'Date': 'Wed, 16 Nov 2022 19:46:20 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Connection': 'keep-alive', 'x-powered-by': 'Express', 'etag': 'W/"52-RsBJrLYKCRnO1EhaP4AKaBzs46c"'} 
 body={"accessToken":"398dc76161555e80d8084b05e87168d1dedf324662329bed33b628e3d883f804"} 
 </msg>
<msg timestamp="20221117 03:46:21.052" level="INFO">C:\Users\P0107074\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'simple-books-api.glitch.me'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20221117 03:46:21.053" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20221117 03:46:19.720" endtime="20221117 03:46:21.053"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20221117 03:46:21.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221117 03:46:21.053" endtime="20221117 03:46:21.055"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response Content is ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20221117 03:46:21.055" endtime="20221117 03:46:21.056"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response JSON is ${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20221117 03:46:21.057" endtime="20221117 03:46:21.058"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${bearer_token_list}</var>
<arg>${response.json()}</arg>
<arg>$.accessToken</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20221117 03:46:21.111" level="INFO">${bearer_token_list} = ['398dc76161555e80d8084b05e87168d1dedf324662329bed33b628e3d883f804']</msg>
<status status="PASS" starttime="20221117 03:46:21.059" endtime="20221117 03:46:21.111"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Beaerer Token List is ${bearer_token_list}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20221117 03:46:21.112" endtime="20221117 03:46:21.113"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${bearer_token}</var>
<arg>Bearer</arg>
<arg>${bearer_token_list[0]}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20221117 03:46:21.115" level="INFO">${bearer_token} = Bearer 398dc76161555e80d8084b05e87168d1dedf324662329bed33b628e3d883f804</msg>
<status status="PASS" starttime="20221117 03:46:21.114" endtime="20221117 03:46:21.115"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Bearer Token is ${bearer_token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20221117 03:46:21.115" endtime="20221117 03:46:21.116"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${bearer_token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20221117 03:46:21.117" level="INFO">${bearer_token} = Bearer 398dc76161555e80d8084b05e87168d1dedf324662329bed33b628e3d883f804</msg>
<status status="PASS" starttime="20221117 03:46:21.116" endtime="20221117 03:46:21.117"/>
</kw>
<status status="PASS" starttime="20221117 03:46:19.715" endtime="20221117 03:46:21.117"/>
</test>
<test id="s1-t3" name="Order Book" line="36">
<kw name="Create Session" library="RequestsLibrary">
<arg>orderbook</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221117 03:46:21.120" level="INFO">Creating Session using : alias=orderbook, url=https://simple-books-api.glitch.me, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221117 03:46:21.120" endtime="20221117 03:46:21.120"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Bearer Token is ${bearer_token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20221117 03:46:21.121" endtime="20221117 03:46:21.121"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${bearer_token_string}</var>
<arg>${bearer_token}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20221117 03:46:21.122" level="INFO">${bearer_token_string} = Bearer 398dc76161555e80d8084b05e87168d1dedf324662329bed33b628e3d883f804</msg>
<status status="PASS" starttime="20221117 03:46:21.122" endtime="20221117 03:46:21.122"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${bearer_token_string}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221117 03:46:21.123" level="INFO">${headers} = {'Authorization': 'Bearer 398dc76161555e80d8084b05e87168d1dedf324662329bed33b628e3d883f804', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20221117 03:46:21.123" endtime="20221117 03:46:21.123"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>bookId=5</arg>
<arg>customerName="sai ganesh"</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221117 03:46:21.124" level="INFO">${body} = {'bookId': '5', 'customerName': '"sai ganesh"'}</msg>
<status status="PASS" starttime="20221117 03:46:21.124" endtime="20221117 03:46:21.124"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221117 03:46:21.125" level="INFO">${body} = {"bookId": "5", "customerName": "\"sai ganesh\""}</msg>
<status status="PASS" starttime="20221117 03:46:21.125" endtime="20221117 03:46:21.125"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>orderbook</arg>
<arg>/orders</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20221117 03:46:22.453" level="INFO">POST Request : url=https://simple-books-api.glitch.me/orders 
 path_url=/orders 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 398dc76161555e80d8084b05e87168d1dedf324662329bed33b628e3d883f804', 'Content-Type': 'application/json', 'Content-Length': '49'} 
 body={"bookId": "5", "customerName": "\"sai ganesh\""} 
 </msg>
<msg timestamp="20221117 03:46:22.453" level="INFO">POST Response : url=https://simple-books-api.glitch.me/orders 
 status=201, reason=Created 
 headers={'Date': 'Wed, 16 Nov 2022 19:46:21 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Connection': 'keep-alive', 'x-powered-by': 'Express', 'etag': 'W/"32-peDaGsXtXKUZ+nCYm77SoQ2Y1fc"'} 
 body={"created":true,"orderId":"lk8sWO1yPUHWaf6_anSIB"} 
 </msg>
<msg timestamp="20221117 03:46:22.453" level="INFO">C:\Users\P0107074\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'simple-books-api.glitch.me'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20221117 03:46:22.454" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20221117 03:46:21.126" endtime="20221117 03:46:22.455"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20221117 03:46:22.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221117 03:46:22.456" endtime="20221117 03:46:22.458"/>
</kw>
<status status="PASS" starttime="20221117 03:46:21.119" endtime="20221117 03:46:22.458"/>
</test>
<status status="PASS" starttime="20221117 03:46:17.752" endtime="20221117 03:46:22.461"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Simple Books Api">Simple Books Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
